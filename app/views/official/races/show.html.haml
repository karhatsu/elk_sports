= content_for(:title, "#{@race.name} - #{t 'official_sub_menu.summary' }")
%h2= t 'official_sub_menu.summary'
= flash_error
= flash_success
- if @race.series.empty?
  = highlight_info(t('.no_series_for_race'))
- elsif @race.competitors.empty?
  = highlight_info(t('.no_competitors_for_race'))
- unless @race.finished? or @race.start_date > Time.zone.today or @race.competitors.empty?
  .action_box= render :partial => "official/finish_races/form", :locals => { :race => @race }
- if offline? and @race.finished?
  .action_box= link_to t('.publish_race_to_internet'), new_official_race_exports_path(@race)
- unless @race.series.empty?
  - cache [@race.cache_key_for_all_series, I18n.locale] do
    %table{cellspacing: 0, border: 1}
      %tr
        %th= t :series
        %th.center{colspan: 2}= t 'activerecord.models.competitor.other'
        %th= t :start_list
        %th.center{colspan: 2}= t :results
        %th.center= t :correct_distances
        %th &nbsp;
      - @race.series.includes(:competitors => [:series]).each do |s|
        %tr
          %td= s.name
          - competitor_count = s.competitors.count
          - if competitor_count > 0
            %td.center= link_to t("competitors.people_short", :count => competitor_count), official_series_competitors_path(s)
            %td.center= link_to t(:add_new), new_official_series_competitor_path(s)
            %td.center
              = yes_or_empty(s.has_start_list?) do
                - link_to t('.create_start_list'), official_series_competitors_path(s)
            - if s.has_start_list?
              - finished_count = s.finished_competitors_count
              %td
                = yes_or_empty(finished_count == competitor_count, "#{finished_count}/#{competitor_count}") do
                  - "#{finished_count}/#{competitor_count}"
              %td= link_to t('.input_results'), official_race_quick_saves_path(@race)
              %td.center
                = yes_or_empty(s.each_competitor_has_correct_estimates?) do
                  - link_to t('.set_correct_estimates'), official_race_correct_estimates_path(s.race)
              %td &nbsp;
            - else
              %td{colspan: 4} &nbsp;
          - else
            - if @race.start_order == Race::START_ORDER_MIXED
              - add_competitor_path =  official_race_start_list_path(@race)
            - else
              - add_competitor_path =  new_official_series_competitor_path(s)
            %td{colspan: 6}= link_to t('.add_series_first_competitor'), add_competitor_path
            %td= link_to t('official.races.form.remove_series'), official_series_path(s), :method => :delete,
                :data => { :confirm => t('official.races.form.remove_series_confirm') }
- if @race.can_destroy?
  .action_box
    = form_tag(official_race_path(@race), :method => :delete) do
      = submit_tag t('.remove_race')
.action_box= link_to t('activerecord.models.team_competition.other'), official_race_team_competitions_path(@race)
.action_box= link_to t('activerecord.models.relay.other'), official_race_relays_path(@race)
.action_box= link_to t('.edit_race_and_series'), edit_official_race_path(@race)
- unless @race.series.empty?
  .action_box= link_to t('.add_competitors_from_csv'), new_official_race_csv_import_path(@race)
- unless @race.competitors.empty?
  .action_box= link_to t('.download_competitors_by_clubs'), official_race_clubs_competitors_path(@race, format: :pdf)
%hr
= link_to t(:back_to_official_home_page), official_root_path
